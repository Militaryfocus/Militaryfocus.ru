#!/usr/bin/env python3
"""
–Ø–¥—Ä–æ –±–ª–æ–≥–∞ –Ω–∞ Python Flask
–°–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–µ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å –ø–æ–ª–Ω—ã–º —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–æ–º –±–ª–æ–≥–∞
"""

import os
from dotenv import load_dotenv
from blog import create_app, db
from blog.models import User, Post, Category, Comment

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

# –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
app = create_app()

# –ö–æ–Ω—Ç–µ–∫—Å—Ç –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö –≤ shell
@app.shell_context_processor
def make_shell_context():
    return {
        'db': db,
        'User': User,
        'Post': Post,
        'Category': Category,
        'Comment': Comment
    }

if __name__ == '__main__':
    with app.app_context():
        # –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—ã –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
        db.create_all()
        
        # –°–æ–∑–¥–∞–µ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é, –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
        admin = User.query.filter_by(username='admin').first()
        if not admin:
            import secrets
            
            # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –±–µ–∑–æ–ø–∞—Å–Ω—ã–π –ø–∞—Ä–æ–ª—å –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
            admin_password = os.environ.get('ADMIN_PASSWORD')
            if not admin_password:
                admin_password = secrets.token_urlsafe(16)
                print(f"‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω —Å–ª—É—á–∞–π–Ω—ã–π –ø–∞—Ä–æ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞!")
                print(f"üîë –°–æ—Ö—Ä–∞–Ω–∏—Ç–µ —ç—Ç–æ—Ç –ø–∞—Ä–æ–ª—å: {admin_password}")
                print("üí° –î–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é ADMIN_PASSWORD")
            
            admin = User(
                username='admin',
                email=os.environ.get('ADMIN_EMAIL', 'admin@blog.com'),
                is_admin=True
            )
            admin.set_password(admin_password)
            db.session.add(admin)
            db.session.commit()
            print("‚úÖ –°–æ–∑–¥–∞–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä: admin")
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
        try:
            from blog.fault_tolerance import init_fault_tolerance
            from blog.monitoring import monitoring_system
            from blog.seo_optimizer import seo_optimizer
            
            # –ó–∞–ø—É—Å–∫ —Å–∏—Å—Ç–µ–º—ã –æ—Ç–∫–∞–∑–æ—É—Å—Ç–æ–π—á–∏–≤–æ—Å—Ç–∏
            init_fault_tolerance()
            print("‚úÖ –°–∏—Å—Ç–µ–º–∞ –æ—Ç–∫–∞–∑–æ—É—Å—Ç–æ–π—á–∏–≤–æ—Å—Ç–∏ –∑–∞–ø—É—â–µ–Ω–∞")
            
            # –ó–∞–ø—É—Å–∫ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
            monitoring_system.start()
            print("‚úÖ –°–∏—Å—Ç–µ–º–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –∑–∞–ø—É—â–µ–Ω–∞")
            
            # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ SEO —Ñ–∞–π–ª–æ–≤
            seo_optimizer.update_all_seo()
            print("‚úÖ SEO —Ñ–∞–π–ª—ã –æ–±–Ω–æ–≤–ª–µ–Ω—ã")
            
        except Exception as e:
            print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤: {e}")
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    try:
        # –ë–µ–∑–æ–ø–∞—Å–Ω–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∑–∞–ø—É—Å–∫–∞
        host = os.environ.get('FLASK_HOST', '0.0.0.0')
        port = int(os.environ.get('FLASK_PORT', 5000))
        debug_mode = os.environ.get('FLASK_DEBUG', 'False').lower() == 'true'
        flask_env = os.environ.get('FLASK_ENV', 'development')
        
        # –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –æ debug —Ä–µ–∂–∏–º–µ
        if debug_mode and flask_env == 'production':
            print("‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: Debug —Ä–µ–∂–∏–º –≤–∫–ª—é—á–µ–Ω –≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ!")
            print("üîí –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ FLASK_DEBUG=False –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞")
        
        # HTTPS –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞
        if flask_env == 'production':
            ssl_cert = os.environ.get('SSL_CERT_PATH')
            ssl_key = os.environ.get('SSL_KEY_PATH')
            
            if ssl_cert and ssl_key:
                import ssl
                ssl_context = ssl.SSLContext(ssl.PROTOCOL_TLSv1_2)
                ssl_context.load_cert_chain(ssl_cert, ssl_key)
                print("üîí –ó–∞–ø—É—Å–∫ —Å HTTPS —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–º")
                app.run(host=host, port=443, ssl_context=ssl_context, debug=debug_mode)
            else:
                print("‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: –ü—Ä–æ–¥–∞–∫—à–µ–Ω –±–µ–∑ HTTPS!")
                print("üîí –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ SSL_CERT_PATH –∏ SSL_KEY_PATH –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏")
                app.run(host=host, port=port, debug=debug_mode)
        else:
            app.run(host=host, port=port, debug=debug_mode)
    except KeyboardInterrupt:
        print("\nüõë –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...")
        
        # –ö–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
        try:
            from blog.fault_tolerance import shutdown_fault_tolerance
            from blog.monitoring import monitoring_system
            
            shutdown_fault_tolerance()
            monitoring_system.stop()
            print("‚úÖ –°–∏—Å—Ç–µ–º–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω—ã")
            
        except Exception as e:
            print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è: {e}")
    except Exception as e:
        print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è: {e}")