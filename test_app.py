#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
"""

import os
import sys
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
sys.path.insert(0, str(Path(__file__).parent))

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
os.environ['SECRET_KEY'] = 'test-secret-key-for-testing-only'
os.environ['DATABASE_URL'] = 'sqlite:///test_blog.db'
os.environ['FLASK_ENV'] = 'testing'
os.environ['FLASK_DEBUG'] = 'False'

print("=" * 60)
print("üîç –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –†–ê–ë–û–¢–û–°–ü–û–°–û–ë–ù–û–°–¢–ò –ü–†–ò–õ–û–ñ–ï–ù–ò–Ø")
print("=" * 60)

# 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–º–ø–æ—Ä—Ç–æ–≤
print("\n1Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Å–Ω–æ–≤–Ω—ã—Ö –∏–º–ø–æ—Ä—Ç–æ–≤...")
try:
    from blog import create_app
    print("‚úÖ blog –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω")
    
    from blog.database import db
    print("‚úÖ database –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω")
    
    from blog.models import User, Post, Category, Comment, Tag
    print("‚úÖ models –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã")
    
    from blog.services import post_service, user_service, comment_service
    print("‚úÖ services –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã")
    
except ImportError as e:
    print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")
    sys.exit(1)

# 2. –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
print("\n2Ô∏è‚É£ –°–æ–∑–¥–∞–Ω–∏–µ Flask –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...")
try:
    app = create_app()
    print("‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ")
except Exception as e:
    print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è: {e}")
    sys.exit(1)

# 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
print("\n3Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...")
try:
    with app.app_context():
        # –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—ã
        db.create_all()
        print("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–∞–±–ª–∏—Ü
        tables = db.engine.table_names()
        print(f"‚úÖ –°–æ–∑–¥–∞–Ω–æ —Ç–∞–±–ª–∏—Ü: {len(tables)}")
        print(f"   –¢–∞–±–ª–∏—Ü—ã: {', '.join(tables)}")
        
except Exception as e:
    print(f"‚ùå –û—à–∏–±–∫–∞ —Ä–∞–±–æ—Ç—ã —Å –ë–î: {e}")
    sys.exit(1)

# 4. –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–∞—Ä—à—Ä—É—Ç–æ–≤
print("\n4Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–∞—Ä—à—Ä—É—Ç–æ–≤...")
try:
    rules = list(app.url_map.iter_rules())
    print(f"‚úÖ –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–æ –º–∞—Ä—à—Ä—É—Ç–æ–≤: {len(rules)}")
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –º–∞—Ä—à—Ä—É—Ç—ã
    main_routes = [
        '/', '/blog/', '/auth/login', '/auth/register',
        '/admin/', '/api/posts', '/install'
    ]
    
    registered_routes = [rule.rule for rule in rules]
    for route in main_routes:
        if any(route in r for r in registered_routes):
            print(f"   ‚úì {route}")
        else:
            print(f"   ‚úó {route} –ù–ï –ù–ê–ô–î–ï–ù")
            
except Exception as e:
    print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –º–∞—Ä—à—Ä—É—Ç–æ–≤: {e}")

# 5. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤
print("\n5Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤...")
try:
    with app.app_context():
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        test_user = user_service.create_user(
            username='testuser',
            email='test@example.com',
            password='testpass123'
        )
        
        if test_user:
            print("‚úÖ UserService —Ä–∞–±–æ—Ç–∞–µ—Ç")
        else:
            print("‚ö†Ô∏è UserService: –Ω–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥—Ä—É–≥–∏–µ —Å–µ—Ä–≤–∏—Å—ã
        from blog.services import category_service, tag_service
        
        test_category = category_service.create(
            name='Test Category',
            description='Test Description'
        )
        
        if test_category:
            print("‚úÖ CategoryService —Ä–∞–±–æ—Ç–∞–µ—Ç")
        else:
            print("‚ö†Ô∏è CategoryService: –Ω–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é")
            
except Exception as e:
    print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–µ—Ä–≤–∏—Å–æ–≤: {e}")

# 6. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
print("\n6Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏...")
try:
    with app.app_context():
        print(f"‚úÖ SECRET_KEY: {'—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω' if app.config.get('SECRET_KEY') else '–ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù'}")
        print(f"‚úÖ DATABASE_URI: {app.config.get('SQLALCHEMY_DATABASE_URI', '–ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù')}")
        print(f"‚úÖ DEBUG: {app.config.get('DEBUG', False)}")
        print(f"‚úÖ TESTING: {app.config.get('TESTING', False)}")
        
except Exception as e:
    print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: {e}")

# 7. –ü—Ä–æ–≤–µ—Ä–∫–∞ —à–∞–±–ª–æ–Ω–æ–≤
print("\n7Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ —à–∞–±–ª–æ–Ω–æ–≤...")
try:
    templates_dir = Path(app.template_folder)
    if templates_dir.exists():
        template_count = len(list(templates_dir.glob('**/*.html')))
        print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ —à–∞–±–ª–æ–Ω–æ–≤: {template_count}")
    else:
        print("‚ùå –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è —à–∞–±–ª–æ–Ω–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
        
except Exception as e:
    print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —à–∞–±–ª–æ–Ω–æ–≤: {e}")

# 8. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤
print("\n8Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤...")
try:
    static_dir = Path(app.static_folder)
    if static_dir.exists():
        css_files = list(static_dir.glob('**/*.css'))
        js_files = list(static_dir.glob('**/*.js'))
        print(f"‚úÖ CSS —Ñ–∞–π–ª–æ–≤: {len(css_files)}")
        print(f"‚úÖ JS —Ñ–∞–π–ª–æ–≤: {len(js_files)}")
    else:
        print("‚ùå –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
        
except Exception as e:
    print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤: {e}")

# –ò—Ç–æ–≥–æ–≤—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
print("\n" + "=" * 60)
print("‚úÖ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û –£–°–ü–ï–®–ù–û!")
print("=" * 60)

# –û—á–∏—Å—Ç–∫–∞
try:
    if os.path.exists('test_blog.db'):
        os.remove('test_blog.db')
        print("\nüßπ –¢–µ—Å—Ç–æ–≤–∞—è –ë–î —É–¥–∞–ª–µ–Ω–∞")
except:
    pass