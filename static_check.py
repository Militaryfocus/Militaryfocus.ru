#!/usr/bin/env python3
"""
–°—Ç–∞—Ç–∏—á–µ—Å–∫–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏ –∫–æ–¥–∞ –±–µ–∑ –∑–∞–ø—É—Å–∫–∞
"""

import os
import re
from pathlib import Path

print("=" * 60)
print("üîç –°–¢–ê–¢–ò–ß–ï–°–ö–ê–Ø –ü–†–û–í–ï–†–ö–ê –†–ê–ë–û–¢–û–°–ü–û–°–û–ë–ù–û–°–¢–ò")
print("=" * 60)

project_root = Path(__file__).parent

# 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
print("\n1Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø—Ä–æ–µ–∫—Ç–∞...")
required_dirs = [
    'blog',
    'blog/models',
    'blog/routes',
    'blog/services',
    'blog/config',
    'blog/templates',
    'blog/static',
    'blog/utils',
    'blog/ai'
]

missing_dirs = []
for dir_path in required_dirs:
    full_path = project_root / dir_path
    if full_path.exists():
        print(f"‚úÖ {dir_path}")
    else:
        print(f"‚ùå {dir_path} - –ù–ï –ù–ê–ô–î–ï–ù")
        missing_dirs.append(dir_path)

# 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
print("\n2Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤...")
required_files = [
    'app.py',
    'requirements.txt',
    'blog/__init__.py',
    'blog/database.py',
    'blog/forms.py',
    'blog/models/__init__.py',
    'blog/routes/__init__.py',
    'blog/services/__init__.py',
    'blog/config/__init__.py'
]

missing_files = []
for file_path in required_files:
    full_path = project_root / file_path
    if full_path.exists():
        print(f"‚úÖ {file_path}")
    else:
        print(f"‚ùå {file_path} - –ù–ï –ù–ê–ô–î–ï–ù")
        missing_files.append(file_path)

# 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–º–ø–æ—Ä—Ç–æ–≤
print("\n3Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–º–ø–æ—Ä—Ç–æ–≤ –≤ –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ñ–∞–π–ª–∞—Ö...")
import_issues = []

def check_imports(file_path):
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–º–ø–æ—Ä—Ç–æ–≤ –≤ —Ñ–∞–π–ª–µ"""
    issues = []
    try:
        with open(file_path, 'r', encoding='utf-8') as f:
            content = f.read()
            
        # –ü–æ–∏—Å–∫ –∏–º–ø–æ—Ä—Ç–æ–≤
        imports = re.findall(r'^\s*(?:from|import)\s+([^\s]+)', content, re.MULTILINE)
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ–±–ª–µ–º–Ω—ã—Ö –∏–º–ø–æ—Ä—Ç–æ–≤
        problematic = [
            'blog.models_perfect',
            'blog.ui_perfect',
            'blog.performance_perfect',
            'blog.security_perfect',
            'blog.api_perfect',
            'blog.fault_tolerance_perfect'
        ]
        
        for imp in imports:
            if any(prob in imp for prob in problematic):
                issues.append(f"–ü—Ä–æ–±–ª–µ–º–Ω—ã–π –∏–º–ø–æ—Ä—Ç: {imp}")
                
    except Exception as e:
        issues.append(f"–û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è —Ñ–∞–π–ª–∞: {e}")
        
    return issues

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–ª—é—á–µ–≤—ã–µ —Ñ–∞–π–ª—ã
files_to_check = [
    'app.py',
    'blog/__init__.py',
    'blog/config/app_config.py',
    'blog/routes/main.py',
    'blog/routes/admin.py'
]

for file_path in files_to_check:
    full_path = project_root / file_path
    if full_path.exists():
        issues = check_imports(full_path)
        if issues:
            print(f"\n‚ö†Ô∏è {file_path}:")
            for issue in issues:
                print(f"   - {issue}")
        else:
            print(f"‚úÖ {file_path} - –∏–º–ø–æ—Ä—Ç—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã")

# 4. –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–æ–¥–µ–ª–µ–π
print("\n4Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–æ–¥–µ–ª–µ–π...")
model_files = list((project_root / 'blog/models').glob('*.py'))
model_files = [f for f in model_files if f.name != '__init__.py']

print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ –º–æ–¥–µ–ª–µ–π: {len(model_files)}")
for model_file in model_files:
    print(f"   - {model_file.name}")

# 5. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤
print("\n5Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤...")
service_files = list((project_root / 'blog/services').glob('*_service.py'))

print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ —Å–µ—Ä–≤–∏—Å–æ–≤: {len(service_files)}")
for service_file in service_files:
    print(f"   - {service_file.name}")

# 6. –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–∞—Ä—à—Ä—É—Ç–æ–≤
print("\n6Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–∞—Ä—à—Ä—É—Ç–æ–≤...")
route_files = list((project_root / 'blog/routes').glob('*.py'))
route_files = [f for f in route_files if f.name != '__init__.py']

print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ —Ñ–∞–π–ª–æ–≤ –º–∞—Ä—à—Ä—É—Ç–æ–≤: {len(route_files)}")
for route_file in route_files:
    print(f"   - {route_file.name}")

# 7. –ü—Ä–æ–≤–µ—Ä–∫–∞ —à–∞–±–ª–æ–Ω–æ–≤
print("\n7Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ —à–∞–±–ª–æ–Ω–æ–≤...")
template_files = list((project_root / 'blog/templates').glob('**/*.html'))

print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ —à–∞–±–ª–æ–Ω–æ–≤: {len(template_files)}")

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ —à–∞–±–ª–æ–Ω—ã
required_templates = [
    'base.html',
    'index.html',
    'blog/post_list.html',
    'blog/post_detail.html',
    'auth/login.html',
    'auth/register.html'
]

for template in required_templates:
    template_path = project_root / 'blog/templates' / template
    if template_path.exists():
        print(f"   ‚úì {template}")
    else:
        print(f"   ‚úó {template} - –ù–ï –ù–ê–ô–î–ï–ù")

# 8. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ü–∏–∫–ª–∏—á–µ—Å–∫–∏—Ö –∏–º–ø–æ—Ä—Ç–æ–≤
print("\n8Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã—Ö —Ü–∏–∫–ª–∏—á–µ—Å–∫–∏—Ö –∏–º–ø–æ—Ä—Ç–æ–≤...")
def check_circular_imports():
    """–ü—Ä–æ—Å—Ç–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Ü–∏–∫–ª–∏—á–µ—Å–∫–∏–µ –∏–º–ø–æ—Ä—Ç—ã"""
    issues = []
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ models –Ω–µ –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç –∏–∑ routes
    models_init = project_root / 'blog/models/__init__.py'
    if models_init.exists():
        with open(models_init, 'r') as f:
            content = f.read()
            if 'from blog.routes' in content:
                issues.append("models –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç –∏–∑ routes")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ database.py –Ω–µ –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç –º–æ–¥–µ–ª–∏ –Ω–∞–ø—Ä—è–º—É—é
    database_py = project_root / 'blog/database.py'
    if database_py.exists():
        with open(database_py, 'r') as f:
            content = f.read()
            if 'from blog.models' in content and 'import' in content:
                issues.append("database.py –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç –º–æ–¥–µ–ª–∏")
    
    return issues

circular_issues = check_circular_imports()
if circular_issues:
    print("‚ùå –ù–∞–π–¥–µ–Ω—ã –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã:")
    for issue in circular_issues:
        print(f"   - {issue}")
else:
    print("‚úÖ –¶–∏–∫–ª–∏—á–µ—Å–∫–∏—Ö –∏–º–ø–æ—Ä—Ç–æ–≤ –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ")

# –ò—Ç–æ–≥–∏
print("\n" + "=" * 60)
print("üìä –ò–¢–û–ì–ò –ü–†–û–í–ï–†–ö–ò:")
print("=" * 60)

total_issues = len(missing_dirs) + len(missing_files) + len(import_issues)

if total_issues == 0:
    print("‚úÖ –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –ø—Ä–æ–±–ª–µ–º –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ!")
    print("‚úÖ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø—Ä–æ–µ–∫—Ç–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞")
    print("‚úÖ –í—Å–µ –æ—Å–Ω–æ–≤–Ω—ã–µ —Ñ–∞–π–ª—ã –Ω–∞ –º–µ—Å—Ç–µ")
    print("‚úÖ –ò–º–ø–æ—Ä—Ç—ã –≤—ã–≥–ª—è–¥—è—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
else:
    print(f"‚ö†Ô∏è –û–±–Ω–∞—Ä—É–∂–µ–Ω–æ –ø—Ä–æ–±–ª–µ–º: {total_issues}")
    if missing_dirs:
        print(f"   - –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π: {len(missing_dirs)}")
    if missing_files:
        print(f"   - –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏—Ö —Ñ–∞–π–ª–æ–≤: {len(missing_files)}")
    if import_issues:
        print(f"   - –ü—Ä–æ–±–ª–µ–º —Å –∏–º–ø–æ—Ä—Ç–∞–º–∏: {len(import_issues)}")

print("\nüí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è: –î–ª—è –ø–æ–ª–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏:")
print("   pip install -r requirements.txt")
print("   python app.py")