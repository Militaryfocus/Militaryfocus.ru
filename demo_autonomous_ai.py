#!/usr/bin/env python3
"""
–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∞–≤—Ç–æ–Ω–æ–º–Ω–æ–π –ò–ò —Å–∏—Å—Ç–µ–º—ã
–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç, –∫–∞–∫ –ò–ò —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ —Å–æ–∑–¥–∞–µ—Ç –∫–∞—Ç–µ–≥–æ—Ä–∏–∏, —Ç–µ–≥–∏ –∏ –∫–æ–Ω—Ç–µ–Ω—Ç
"""

import os
import sys
import time

# –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å
sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))

def demo_autonomous_ai():
    """–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∞–≤—Ç–æ–Ω–æ–º–Ω–æ–π –ò–ò —Å–∏—Å—Ç–µ–º—ã"""
    print("ü§ñ –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –ê–í–¢–û–ù–û–ú–ù–û–ô –ò–ò –°–ò–°–¢–ï–ú–´")
    print("="*60)
    print("–≠—Ç–∞ —Å–∏—Å—Ç–µ–º–∞ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç, –∫–∞–∫ –ò–ò –º–æ–∂–µ—Ç:")
    print("‚Ä¢ –ê–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Ç—Ä–µ–Ω–¥—ã –∏ –ø–æ–ø—É–ª—è—Ä–Ω—ã–µ —Ç–µ–º—ã")
    print("‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ–∑–¥–∞–≤–∞—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏–∏")
    print("‚Ä¢ –ì–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã–µ —Ç–µ–≥–∏")
    print("‚Ä¢ –°–æ–∑–¥–∞–≤–∞—Ç—å –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç")
    print("‚Ä¢ –ü–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å –ø—É–±–ª–∏–∫–∞—Ü–∏–∏")
    print("="*60)
    
    try:
        from blog import create_app, db
        from blog.autonomous_ai import start_autonomous_content_generation, get_autonomous_stats
        from blog.models import Category, Tag, Post
        
        app = create_app()
        with app.app_context():
            # –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—ã –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç
            db.create_all()
            
            print("\nüöÄ –ó–∞–ø—É—Å–∫ –∞–≤—Ç–æ–Ω–æ–º–Ω–æ–π –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏...")
            print("–ò–ò –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç —Ç—Ä–µ–Ω–¥—ã –∏ —Å–æ–∑–¥–∞–µ—Ç –∫–æ–Ω—Ç–µ–Ω—Ç...")
            
            # –ó–∞–ø—É—Å–∫–∞–µ–º –∞–≤—Ç–æ–Ω–æ–º–Ω—É—é –≥–µ–Ω–µ—Ä–∞—Ü–∏—é
            results = start_autonomous_content_generation()
            
            print("\n" + "="*60)
            print("üìä –†–ï–ó–£–õ–¨–¢–ê–¢–´ –ê–í–¢–û–ù–û–ú–ù–û–ô –ì–ï–ù–ï–†–ê–¶–ò–ò")
            print("="*60)
            
            print(f"üìÇ –°–æ–∑–¥–∞–Ω–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–π: {results.get('categories_created', 0)}")
            print(f"üè∑Ô∏è –°–æ–∑–¥–∞–Ω–æ —Ç–µ–≥–æ–≤: {results.get('tags_created', 0)}")
            print(f"üìù –°–æ–∑–¥–∞–Ω–æ –ø–æ—Å—Ç–æ–≤: {results.get('posts_generated', 0)}")
            print(f"üìà –ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–æ —Ç—Ä–µ–Ω–¥–æ–≤: {results.get('trends_analyzed', 0)}")
            
            if results.get('errors'):
                print(f"\n‚ö†Ô∏è –û—à–∏–±–∫–∏:")
                for error in results['errors']:
                    print(f"   ‚Ä¢ {error}")
            
            print("="*60)
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–∑–¥–∞–Ω–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
            categories = Category.query.all()
            if categories:
                print(f"\nüìÇ –°–û–ó–î–ê–ù–ù–´–ï –ö–ê–¢–ï–ì–û–†–ò–ò ({len(categories)}):")
                for cat in categories:
                    posts_count = cat.get_posts_count()
                    print(f"   ‚Ä¢ {cat.name}: {posts_count} –ø–æ—Å—Ç–æ–≤")
                    print(f"     –û–ø–∏—Å–∞–Ω–∏–µ: {cat.description}")
                    print(f"     –¶–≤–µ—Ç: {cat.color}")
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–ø—É–ª—è—Ä–Ω—ã–µ —Ç–µ–≥–∏
            popular_tags = db.session.query(Tag.name, db.func.count(Tag.id)).join(
                Tag.posts
            ).group_by(Tag.name).order_by(db.func.count(Tag.id).desc()).limit(10).all()
            
            if popular_tags:
                print(f"\nüè∑Ô∏è –ü–û–ü–£–õ–Ø–†–ù–´–ï –¢–ï–ì–ò:")
                for tag_name, count in popular_tags:
                    print(f"   ‚Ä¢ {tag_name}: {count} –ø–æ—Å—Ç–æ–≤")
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ –ø–æ—Å—Ç—ã
            recent_posts = Post.query.order_by(Post.created_at.desc()).limit(5).all()
            if recent_posts:
                print(f"\nüìù –ü–û–°–õ–ï–î–ù–ò–ï –°–û–ó–î–ê–ù–ù–´–ï –ü–û–°–¢–´:")
                for post in recent_posts:
                    print(f"   ‚Ä¢ {post.title}")
                    print(f"     –ö–∞—Ç–µ–≥–æ—Ä–∏—è: {post.category.name if post.category else '–ë–µ–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏'}")
                    print(f"     –¢–µ–≥–∏: {', '.join([tag.name for tag in post.tags[:3]])}")
                    print(f"     –°–æ–∑–¥–∞–Ω: {post.created_at.strftime('%d.%m.%Y %H:%M')}")
                    print()
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ–±—â—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
            stats = get_autonomous_stats()
            print(f"\nüìà –û–ë–©–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê –ê–í–¢–û–ù–û–ú–ù–û–ô –°–ò–°–¢–ï–ú–´:")
            print(f"   –í—Å–µ–≥–æ —Å–æ–∑–¥–∞–Ω–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–π: {stats.get('categories_created', 0)}")
            print(f"   –í—Å–µ–≥–æ —Å–æ–∑–¥–∞–Ω–æ —Ç–µ–≥–æ–≤: {stats.get('tags_created', 0)}")
            print(f"   –í—Å–µ–≥–æ —Å–æ–∑–¥–∞–Ω–æ –ø–æ—Å—Ç–æ–≤: {stats.get('posts_generated', 0)}")
            print(f"   –ü–æ—Å–ª–µ–¥–Ω–∏–π –∞–Ω–∞–ª–∏–∑: {stats.get('last_analysis', '–ù–∏–∫–æ–≥–¥–∞')}")
            
            print("\nüéâ –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –ó–ê–í–ï–†–®–ï–ù–ê!")
            print("\nüí° –ß—Ç–æ –ø—Ä–æ–∏–∑–æ—à–ª–æ:")
            print("   1. –ò–ò –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–ª —Ç–µ–∫—É—â–∏–µ —Ç—Ä–µ–Ω–¥—ã")
            print("   2. –°–æ–∑–¥–∞–ª –Ω–æ–≤—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö —Ç–µ–º")
            print("   3. –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–ª —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã–µ —Ç–µ–≥–∏ –¥–ª—è –∫–∞–∂–¥–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏")
            print("   4. –°–æ–∑–¥–∞–ª –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç –ø–æ –∞–∫—Ç—É–∞–ª—å–Ω—ã–º —Ç–µ–º–∞–º")
            print("   5. –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–ª –ø—É–±–ª–∏–∫–∞—Ü–∏–∏")
            
            print("\nüöÄ –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:")
            print("   1. python app.py                    # –ó–∞–ø—É—Å—Ç–∏—Ç—å –±–ª–æ–≥")
            print("   2. –û—Ç–∫—Ä–æ–π—Ç–µ http://localhost:5000")
            print("   3. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ /autonomous/dashboard # –ü–∞–Ω–µ–ª—å –∞–≤—Ç–æ–Ω–æ–º–Ω–æ–π –ò–ò")
            print("   4. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É: python ai_manager.py autonomous")
            
            return True
            
    except ImportError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")
        print("üí° –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏: pip install -r requirements.txt")
        return False
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏: {e}")
        return False

def show_autonomous_capabilities():
    """–ü–æ–∫–∞–∑–∞—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –∞–≤—Ç–æ–Ω–æ–º–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã"""
    print("\n" + "="*60)
    print("ü§ñ –í–û–ó–ú–û–ñ–ù–û–°–¢–ò –ê–í–¢–û–ù–û–ú–ù–û–ô –ò–ò –°–ò–°–¢–ï–ú–´")
    print("="*60)
    
    capabilities = {
        "üìä –ê–Ω–∞–ª–∏–∑ —Ç—Ä–µ–Ω–¥–æ–≤": [
            "–ê–Ω–∞–ª–∏–∑ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞",
            "–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –≤–Ω–µ—à–Ω–∏—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤",
            "–°–µ–∑–æ–Ω–Ω—ã–µ —Ç—Ä–µ–Ω–¥—ã",
            "–ü–æ–ø—É–ª—è—Ä–Ω—ã–µ —Ç–µ–º—ã",
            "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤"
        ],
        "üìÇ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏": [
            "–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–π",
            "–£–º–Ω–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∑–∞—Ü–∏—è —Ç–µ–º",
            "–î–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–µ –æ–ø–∏—Å–∞–Ω–∏—è",
            "–¶–≤–µ—Ç–æ–≤–æ–µ –∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏–µ",
            "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º"
        ],
        "üè∑Ô∏è –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ç–µ–≥–æ–≤": [
            "–ö–æ–Ω—Ç–µ–∫—Å—Ç–Ω—ã–µ —Ç–µ–≥–∏",
            "–ü–æ–ø—É–ª—è—Ä–Ω—ã–µ —Ç–µ–º—ã",
            "–°–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑",
            "–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –≥—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞",
            "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è"
        ],
        "‚úçÔ∏è –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ç–µ–Ω—Ç–∞": [
            "–ö–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ —Å—Ç–∞—Ç—å–∏",
            "–†–∞–∑–Ω–æ–æ–±—Ä–∞–∑–Ω—ã–µ —Å—Ç–∏–ª–∏",
            "SEO-–æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è",
            "–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ",
            "–ö–æ–Ω—Ç—Ä–æ–ª—å –∫–∞—á–µ—Å—Ç–≤–∞"
        ],
        "üìÖ –ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ": [
            "–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ",
            "–ü—Ä–∏–æ—Ä–∏—Ç–∏–∑–∞—Ü–∏—è —Ç–µ–º",
            "–û–ø—Ç–∏–º–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏",
            "–ë–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∫–∞ –∫–æ–Ω—Ç–µ–Ω—Ç–∞",
            "–ê–¥–∞–ø—Ç–∏–≤–Ω–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ"
        ],
        "üîß –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ": [
            "–í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å",
            "–ö–æ–º–∞–Ω–¥–Ω–∞—è —Å—Ç—Ä–æ–∫–∞",
            "API –¥–ª—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏",
            "–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏",
            "–î–µ—Ç–∞–ª—å–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞"
        ]
    }
    
    for category, items in capabilities.items():
        print(f"\n{category}:")
        for item in items:
            print(f"  ‚Ä¢ {item}")
    
    print("\nüéØ –£–ù–ò–ö–ê–õ–¨–ù–´–ï –û–°–û–ë–ï–ù–ù–û–°–¢–ò:")
    print("  ‚ú® –ü–æ–ª–Ω–∞—è –∞–≤—Ç–æ–Ω–æ–º–Ω–æ—Å—Ç—å - –ò–ò —Ä–∞–±–æ—Ç–∞–µ—Ç –±–µ–∑ –≤–º–µ—à–∞—Ç–µ–ª—å—Å—Ç–≤–∞")
    print("  üß† –°–∞–º–æ–æ–±—É—á–µ–Ω–∏–µ - —Å–∏—Å—Ç–µ–º–∞ —É–ª—É—á—à–∞–µ—Ç—Å—è —Å–æ –≤—Ä–µ–º–µ–Ω–µ–º")
    print("  üìà –ê–¥–∞–ø—Ç–∏–≤–Ω–æ—Å—Ç—å - –ø–æ–¥—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç—Å—è –ø–æ–¥ –∞—É–¥–∏—Ç–æ—Ä–∏—é")
    print("  üîÑ –ù–µ–ø—Ä–µ—Ä—ã–≤–Ω–æ—Å—Ç—å - —Ä–∞–±–æ—Ç–∞–µ—Ç 24/7")
    print("  üé® –ö—Ä–µ–∞—Ç–∏–≤–Ω–æ—Å—Ç—å - —Å–æ–∑–¥–∞–µ—Ç —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç")
    
    print("="*60)

if __name__ == '__main__':
    start_time = time.time()
    
    success = demo_autonomous_ai()
    
    if success:
        show_autonomous_capabilities()
        
        end_time = time.time()
        print(f"\n‚è±Ô∏è  –í—Ä–µ–º—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏: {end_time - start_time:.2f} —Å–µ–∫—É–Ω–¥")
        
        print("\nüöÄ –ê–í–¢–û–ù–û–ú–ù–ê–Ø –ò–ò –°–ò–°–¢–ï–ú–ê –ì–û–¢–û–í–ê!")
        print("üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:")
        print("   ‚Ä¢ python ai_manager.py autonomous        # –ê–≤—Ç–æ–Ω–æ–º–Ω–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è")
        print("   ‚Ä¢ python ai_manager.py autonomous-status  # –°—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã")
        print("   ‚Ä¢ python ai_manager.py stats              # –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞")
        
    else:
        print("\n‚ùå –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –Ω–µ –ø—Ä–æ–π–¥–µ–Ω–∞")
        print("üí° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —É—Å—Ç–∞–Ω–æ–≤–∫—É –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π")
        sys.exit(1)