#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
"""

import os
import sys
from datetime import datetime, timedelta
import random
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
sys.path.insert(0, str(Path(__file__).parent))

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
os.environ['SECRET_KEY'] = os.environ.get('SECRET_KEY', 'dev-secret-key-for-sample-data')
os.environ['DATABASE_URL'] = os.environ.get('DATABASE_URL', 'sqlite:///instance/blog.db')

from . import create_app
from config.database import db
from models import User, Post, Category, Tag, Comment, Like, View, Bookmark
from services.core import user_service, post_service, category_service, tag_service, comment_service

app = create_app()

# –ü—Ä–∏–º–µ—Ä–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
SAMPLE_CATEGORIES = [
    {'name': '–¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏', 'description': '–ù–æ–≤–æ—Å—Ç–∏ –∏ —Å—Ç–∞—Ç—å–∏ –æ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è—Ö', 'color': '#007bff'},
    {'name': '–ù–∞—É–∫–∞', 'description': '–ù–∞—É—á–Ω—ã–µ –æ—Ç–∫—Ä—ã—Ç–∏—è –∏ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è', 'color': '#28a745'},
    {'name': '–ò—Å–∫—É—Å—Å—Ç–≤–æ', 'description': '–ú–∏—Ä –∏—Å–∫—É—Å—Å—Ç–≤–∞ –∏ –∫—É–ª—å—Ç—É—Ä—ã', 'color': '#dc3545'},
    {'name': '–°–ø–æ—Ä—Ç', 'description': '–°–ø–æ—Ä—Ç–∏–≤–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏ –∏ —Å–æ–±—ã—Ç–∏—è', 'color': '#ffc107'},
    {'name': '–ü—É—Ç–µ—à–µ—Å—Ç–≤–∏—è', 'description': '–ü—É—Ç–µ–≤–æ–¥–∏—Ç–µ–ª–∏ –∏ —Ä–∞—Å—Å–∫–∞–∑—ã –æ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è—Ö', 'color': '#17a2b8'},
]

SAMPLE_TAGS = [
    'python', 'javascript', 'ai', '–º–∞—à–∏–Ω–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ', '–≤–µ–±-—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞',
    'data science', 'react', 'flask', 'django', 'postgresql',
    'docker', 'kubernetes', 'devops', 'security', 'blockchain',
    '–∫–æ—Å–º–æ—Å', '—Ñ–∏–∑–∏–∫–∞', '–±–∏–æ–ª–æ–≥–∏—è', '–º–µ–¥–∏—Ü–∏–Ω–∞', '—ç–∫–æ–ª–æ–≥–∏—è'
]

SAMPLE_TITLES = [
    "–ö–∞–∫ –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç –º–µ–Ω—è–µ—Ç –º–∏—Ä —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏",
    "10 –ª—É—á—à–∏—Ö –ø—Ä–∞–∫—Ç–∏–∫ –≤ Python –¥–ª—è –Ω–∞—á–∏–Ω–∞—é—â–∏—Ö",
    "–í–≤–µ–¥–µ–Ω–∏–µ –≤ –º–∞—à–∏–Ω–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ: —Å —á–µ–≥–æ –Ω–∞—á–∞—Ç—å",
    "–°–æ–∑–¥–∞–Ω–∏–µ REST API —Å –ø–æ–º–æ—â—å—é Flask –∑–∞ 30 –º–∏–Ω—É—Ç",
    "Docker –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤: –ø–æ–ª–Ω–æ–µ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ",
    "–û—Å–Ω–æ–≤—ã –∫–∏–±–µ—Ä–±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –≤ 2024 –≥–æ–¥—É",
    "React vs Vue: —á—Ç–æ –≤—ã–±—Ä–∞—Ç—å –¥–ª—è –Ω–æ–≤–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞",
    "PostgreSQL: –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏",
    "–ú–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å–Ω–∞—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞: –ø–ª—é—Å—ã –∏ –º–∏–Ω—É—Å—ã",
    "GraphQL: –±—É–¥—É—â–µ–µ API –∏–ª–∏ –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ç—Ä–µ–Ω–¥?",
    "–ö–≤–∞–Ω—Ç–æ–≤—ã–µ –≤—ã—á–∏—Å–ª–µ–Ω–∏—è: —á—Ç–æ –Ω—É–∂–Ω–æ –∑–Ω–∞—Ç—å —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É",
    "–ë–ª–æ–∫—á–µ–π–Ω —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –≤–Ω–µ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç",
    "CI/CD pipeline —Å GitHub Actions",
    "Kubernetes –¥–ª—è –Ω–∞—á–∏–Ω–∞—é—â–∏—Ö: —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –ø–µ—Ä–≤–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è",
    "–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ Python: pytest vs unittest"
]

SAMPLE_CONTENT = """
<p>–≠—Ç–æ –ø—Ä–∏–º–µ—Ä —Å—Ç–∞—Ç—å–∏, —Å–æ–∑–¥–∞–Ω–Ω–æ–π –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π –±–ª–æ–≥–∞. 
–í —Ä–µ–∞–ª—å–Ω–æ–π —Å—Ç–∞—Ç—å–µ –∑–¥–µ—Å—å –±—ã–ª –±—ã –ø–æ–¥—Ä–æ–±–Ω—ã–π –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–≤–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç.</p>

<h2>–í–≤–µ–¥–µ–Ω–∏–µ</h2>
<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor 
incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud 
exercitation ullamco laboris.</p>

<h2>–û—Å–Ω–æ–≤–Ω–∞—è —á–∞—Å—Ç—å</h2>
<p>Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu 
fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa 
qui officia deserunt mollit anim id est laborum.</p>

<h3>–ü–æ–¥—Ä–∞–∑–¥–µ–ª 1</h3>
<p>Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque 
laudantium, totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et quasi 
architecto beatae vitae dicta sunt explicabo.</p>

<h3>–ü–æ–¥—Ä–∞–∑–¥–µ–ª 2</h3>
<p>Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut fugit, sed quia 
consequuntur magni dolores eos qui ratione voluptatem sequi nesciunt.</p>

<h2>–ó–∞–∫–ª—é—á–µ–Ω–∏–µ</h2>
<p>At vero eos et accusamus et iusto odio dignissimos ducimus qui blanditiis praesentium 
voluptatum deleniti atque corrupti quos dolores et quas molestias excepturi sint occaecati 
cupiditate non provident.</p>
"""

SAMPLE_COMMENTS = [
    "–û—Ç–ª–∏—á–Ω–∞—è —Å—Ç–∞—Ç—å—è! –û—á–µ–Ω—å –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–≤–Ω–æ –∏ –ø–æ–Ω—è—Ç–Ω–æ –Ω–∞–ø–∏—Å–∞–Ω–æ.",
    "–°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–¥—Ä–æ–±–Ω–æ–µ –æ–±—ä—è—Å–Ω–µ–Ω–∏–µ. –ë—É–¥—É –∂–¥–∞—Ç—å –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è.",
    "–ò–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π –ø–æ–¥—Ö–æ–¥ –∫ —Ä–µ—à–µ–Ω–∏—é –ø—Ä–æ–±–ª–µ–º—ã. –ê –∫–∞–∫ –Ω–∞—Å—á–µ—Ç –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã—Ö –º–µ—Ç–æ–¥–æ–≤?",
    "–ü—Ä–∏–º–µ–Ω–∏–ª –æ–ø–∏—Å–∞–Ω–Ω—ã–µ —Ç–µ—Ö–Ω–∏–∫–∏ –≤ —Å–≤–æ–µ–º –ø—Ä–æ–µ–∫—Ç–µ - —Ä–∞–±–æ—Ç–∞–µ—Ç –æ—Ç–ª–∏—á–Ω–æ!",
    "–•–æ—Ç–µ–ª–æ—Å—å –±—ã —É–≤–∏–¥–µ—Ç—å –±–æ–ª—å—à–µ –ø—Ä–∏–º–µ—Ä–æ–≤ –∫–æ–¥–∞.",
    "–°–æ–≥–ª–∞—Å–µ–Ω —Å –∞–≤—Ç–æ—Ä–æ–º. –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –≤–∞–∂–Ω–∞—è —Ç–µ–º–∞.",
    "–ê –µ—Å—Ç—å –ª–∏ –∏—Å—Ö–æ–¥–Ω—ã–π –∫–æ–¥ –ø—Ä–∏–º–µ—Ä–æ–≤ –Ω–∞ GitHub?",
    "–û—á–µ–Ω—å –ø–æ–ª–µ–∑–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è –Ω–∞—á–∏–Ω–∞—é—â–∏—Ö —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤.",
    "–°—Ç–∞—Ç—å—è –ø–æ–º–æ–≥–ª–∞ —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è –≤ —Å–ª–æ–∂–Ω–æ–π —Ç–µ–º–µ. –ë–ª–∞–≥–æ–¥–∞—Ä—é!",
    "–ñ–¥–µ–º –±–æ–ª—å—à–µ —Å—Ç–∞—Ç–µ–π –Ω–∞ —ç—Ç—É —Ç–µ–º—É!"
]

def create_sample_data():
    """–°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö"""
    with app.app_context():
        print("üöÄ –ù–∞—á–∏–Ω–∞–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö...")
        
        # –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—ã
        db.create_all()
        
        # 1. –°–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        print("\nüë• –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...")
        users = []
        
        # –ê–¥–º–∏–Ω
        admin = user_service.create_user(
            username='admin',
            email='admin@blog.com',
            password='admin123',
            is_admin=True
        )
        if admin:
            users.append(admin)
            print(f"‚úÖ –°–æ–∑–¥–∞–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä: admin / admin123")
        
        # –û–±—ã—á–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏
        for i in range(1, 6):
            user = user_service.create_user(
                username=f'user{i}',
                email=f'user{i}@example.com',
                password=f'password{i}',
                first_name=f'–ò–º—è{i}',
                last_name=f'–§–∞–º–∏–ª–∏—è{i}'
            )
            if user:
                users.append(user)
                print(f"‚úÖ –°–æ–∑–¥–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: user{i}")
        
        # 2. –°–æ–∑–¥–∞–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
        print("\nüìÅ –°–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–π...")
        categories = []
        for cat_data in SAMPLE_CATEGORIES:
            category = category_service.create(**cat_data)
            if category:
                categories.append(category)
                print(f"‚úÖ –°–æ–∑–¥–∞–Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—è: {category.name}")
        
        # 3. –°–æ–∑–¥–∞–µ–º —Ç–µ–≥–∏
        print("\nüè∑Ô∏è –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ–≥–æ–≤...")
        tags = []
        for tag_name in SAMPLE_TAGS:
            tag = tag_service.get_or_create_tag(tag_name)
            if tag:
                tags.append(tag)
        print(f"‚úÖ –°–æ–∑–¥–∞–Ω–æ —Ç–µ–≥–æ–≤: {len(tags)}")
        
        # 4. –°–æ–∑–¥–∞–µ–º –ø–æ—Å—Ç—ã
        print("\nüìù –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ—Å—Ç–æ–≤...")
        posts = []
        
        for i, title in enumerate(SAMPLE_TITLES):
            # –í—ã–±–∏—Ä–∞–µ–º —Å–ª—É—á–∞–π–Ω–æ–≥–æ –∞–≤—Ç–æ—Ä–∞
            author = random.choice(users[1:])  # –ò—Å–∫–ª—é—á–∞–µ–º –∞–¥–º–∏–Ω–∞
            
            # –í—ã–±–∏—Ä–∞–µ–º —Å–ª—É—á–∞–π–Ω—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é
            category = random.choice(categories)
            
            # –í—ã–±–∏—Ä–∞–µ–º —Å–ª—É—á–∞–π–Ω—ã–µ —Ç–µ–≥–∏ (2-4 —à—Ç—É–∫–∏)
            post_tags = random.sample(tags, random.randint(2, 4))
            
            # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –¥–∞—Ç—É –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –≤ –ø—Ä–æ—à–ª–æ–º
            days_ago = random.randint(1, 60)
            created_at = datetime.utcnow() - timedelta(days=days_ago)
            
            # –°–æ–∑–¥–∞–µ–º –ø–æ—Å—Ç
            post_data = {
                'title': title,
                'content': SAMPLE_CONTENT,
                'excerpt': f"–≠—Ç–æ –∫—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Å—Ç–∞—Ç—å–∏ '{title}'. –ó–¥–µ—Å—å –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∞ –æ—Å–Ω–æ–≤–Ω–∞—è –∏–¥–µ—è –∏ –∫–ª—é—á–µ–≤—ã–µ –º–æ–º–µ–Ω—Ç—ã.",
                'author_id': author.id,
                'category_id': category.id,
                'is_published': True,
                'created_at': created_at,
                'updated_at': created_at
            }
            
            post = post_service.create(**post_data)
            
            if post:
                # –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–≥–∏
                for tag in post_tags:
                    post.tags.append(tag)
                
                # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å–ª—É—á–∞–π–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤
                post.views = random.randint(10, 1000)
                
                db.session.commit()
                posts.append(post)
                print(f"‚úÖ –°–æ–∑–¥–∞–Ω –ø–æ—Å—Ç: {post.title[:50]}...")
        
        # 5. –°–æ–∑–¥–∞–µ–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏
        print("\nüí¨ –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤...")
        comment_count = 0
        
        for post in posts:
            # –°–ª—É—á–∞–π–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ (0-5)
            num_comments = random.randint(0, 5)
            
            for _ in range(num_comments):
                commenter = random.choice(users)
                comment_text = random.choice(SAMPLE_COMMENTS)
                
                comment = comment_service.create_comment(
                    post_id=post.id,
                    user_id=commenter.id,
                    content=comment_text,
                    is_approved=True
                )
                
                if comment:
                    comment_count += 1
        
        print(f"‚úÖ –°–æ–∑–¥–∞–Ω–æ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤: {comment_count}")
        
        # 6. –°–æ–∑–¥–∞–µ–º –ª–∞–π–∫–∏
        print("\n‚ù§Ô∏è –°–æ–∑–¥–∞–Ω–∏–µ –ª–∞–π–∫–æ–≤...")
        like_count = 0
        
        for post in posts:
            # –°–ª—É—á–∞–π–Ω—ã–µ –ª–∞–π–∫–∏ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
            likers = random.sample(users, random.randint(0, len(users)))
            
            for user in likers:
                like = Like(
                    user_id=user.id,
                    item_type='post',
                    item_id=post.id
                )
                db.session.add(like)
                like_count += 1
        
        db.session.commit()
        print(f"‚úÖ –°–æ–∑–¥–∞–Ω–æ –ª–∞–π–∫–æ–≤: {like_count}")
        
        # 7. –°–æ–∑–¥–∞–µ–º –∑–∞–∫–ª–∞–¥–∫–∏
        print("\nüîñ –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–∫–ª–∞–¥–æ–∫...")
        bookmark_count = 0
        
        for user in users[1:]:  # –ò—Å–∫–ª—é—á–∞–µ–º –∞–¥–º–∏–Ω–∞
            # –ö–∞–∂–¥—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ–±–∞–≤–ª—è–µ—Ç –≤ –∑–∞–∫–ª–∞–¥–∫–∏ 1-3 –ø–æ—Å—Ç–∞
            bookmarked_posts = random.sample(posts, random.randint(1, min(3, len(posts))))
            
            for post in bookmarked_posts:
                bookmark = Bookmark(
                    user_id=user.id,
                    post_id=post.id
                )
                db.session.add(bookmark)
                bookmark_count += 1
        
        db.session.commit()
        print(f"‚úÖ –°–æ–∑–¥–∞–Ω–æ –∑–∞–∫–ª–∞–¥–æ–∫: {bookmark_count}")
        
        # 8. –ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
        print("\nüìä –ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
        print(f"   - –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {len(users)}")
        print(f"   - –ö–∞—Ç–µ–≥–æ—Ä–∏–π: {len(categories)}")
        print(f"   - –¢–µ–≥–æ–≤: {len(tags)}")
        print(f"   - –ü–æ—Å—Ç–æ–≤: {len(posts)}")
        print(f"   - –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤: {comment_count}")
        print(f"   - –õ–∞–π–∫–æ–≤: {like_count}")
        print(f"   - –ó–∞–∫–ª–∞–¥–æ–∫: {bookmark_count}")
        
        print("\n‚úÖ –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω—ã!")
        print("\nüîë –î–∞–Ω–Ω—ã–µ –¥–ª—è –≤—Ö–æ–¥–∞:")
        print("   –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä: admin / admin123")
        for i in range(1, 6):
            print(f"   –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {i}: user{i} / password{i}")

if __name__ == '__main__':
    create_sample_data()